<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pj.project.user.UserMapper">

	<!-- 增 [G] -->
	<insert id="add">
		insert into 
		user (id, username, password, create_by, create_time, update_by, update_time) 
		values (#{id}, #{username}, #{password}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}) 
	</insert>

	<!-- 删 -->
	<delete id="delete">
		delete from user 
		where id = #{id}
	</delete>

	<!-- 改 [G] -->
	<update id="update">
		update user set
		id = #{id}, 
		username = #{username}, 
		password = #{password}, 
		create_by = #{createBy}, 
		create_time = #{createTime}, 
		update_by = #{updateBy}, 
		update_time = #{updateTime}
		where id = #{id}
	</update>


	<!-- ================================== 查询相关 ================================== -->
	<!-- select id, username, password, create_by, create_time, update_by, update_time from user  -->
	
	<!-- 通用映射：手动模式 -->
	<resultMap id="model" type="com.pj.project.user.User">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="createBy" column="create_by" />
		<result property="createTime" column="create_time" />
		<result property="updateBy" column="update_by" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<!-- 公共查询sql片段 -->
	<sql id="select_sql">
		select * 
		from user 
	</sql>
	
	<!-- 查 - 根据id -->
	<select id="getById" resultMap="model">
		<include refid="select_sql"></include>
		where id = #{id}
	</select>
	
	<!-- 查集合 - 根据条件（参数为空时代表忽略指定条件） [G] -->
	<select id="getList" resultMap="model">
		<include refid="select_sql"></include>
		<where>
			<if test=' this.has("id") '> and id = #{id} </if>
			<if test=' this.has("username") '> and username = #{username} </if>
			<if test=' this.has("password") '> and password = #{password} </if>
			<if test=' this.has("createBy") '> and create_by = #{createBy} </if>
			<if test=' this.has("createTime") '> and create_time = #{createTime} </if>
			<if test=' this.has("updateBy") '> and update_by = #{updateBy} </if>
			<if test=' this.has("updateTime") '> and update_time = #{updateTime} </if>
		</where>
		order by
		<choose>
			<when test='sortType == 1'> id desc </when>
			<when test='sortType == 2'> username desc </when>
			<when test='sortType == 3'> password desc </when>
			<when test='sortType == 4'> create_by desc </when>
			<when test='sortType == 5'> create_time desc </when>
			<when test='sortType == 6'> update_by desc </when>
			<when test='sortType == 7'> update_time desc </when>
			<otherwise> id desc </otherwise>
		</choose>
	</select>
	
	
	
	
	
	
	
	
	

</mapper>
