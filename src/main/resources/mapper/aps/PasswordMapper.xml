<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pj.project.aps.password.PasswordMapper">

	<!-- 增 [G] -->
	<insert id="add">
		insert into
		password (id, user_id, category_id, title, account, password, url, notes, create_by, create_time, update_by, update_time)
		values (#{id}, #{userId}, #{categoryId}, #{title}, #{account}, #{password}, #{url}, #{notes}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime})
	</insert>

	<!-- 删 -->
	<delete id="delete">
		delete from password
		where id = #{id}
	</delete>

	<!-- 改 [G] -->
	<update id="update">
		update password set
		id = #{id},
		user_id = #{userId},
		category_id = #{categoryId},
		title = #{title},
		account = #{account},
		password = #{password},
		url = #{url},
		notes = #{notes},
		update_by = #{updateBy},
		update_time = #{updateTime}
		where id = #{id}
	</update>


	<!-- ================================== 查询相关 ================================== -->
	<!-- select id, user_id, category_id, title, account, password, url, notes, create_by, create_time, update_by, update_time from password  -->

	<!-- 通用映射：手动模式 -->
	<resultMap id="model" type="com.pj.project.aps.password.Password">
		<result property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="categoryId" column="category_id" />
		<result property="categoryName" column="category_name" />
		<result property="title" column="title" />
		<result property="account" column="account" />
		<result property="password" column="password" />
		<result property="url" column="url" />
		<result property="notes" column="notes" />
		<result property="createBy" column="create_by" />
		<result property="createTime" column="create_time" />
		<result property="updateBy" column="update_by" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<!-- 删除一条记录，指定表名，id列表 -->
	<delete id="deleteByIds">
		delete from ${tableName}
		where id in
		<foreach collection="ids" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	<!-- 公共查询sql片段 -->
	<sql id="select_sql">
		select *
		from password
	</sql>
	<select id="existName" resultType="int">
		select count(*) from password where title = #{name}
	</select>
	<select id="searchByName" resultMap="model">
		select p.*,c.`name` as category_name from `password` p join category c on p.category_id = c.id
		<where>
			1 = 1 and p.user_id = #{userId}
			<if test=' name != null and name != ""  '>
				and p.title = #{name}
			</if>
		</where>
	</select>
	<sql id="select_list_sql">
		select p.id,p.user_id,p.category_id,c.name as category_name,p.title,p.account,p.password,p.url,p.notes,p.create_time,
		p.create_by,p.update_time,p.update_by
		from password p join category c on p.user_id = c.user_id
		and p.category_id = c.id
	</sql>

	<!-- 查 - 根据id -->
	<select id="getById" resultMap="model">
		<include refid="select_sql"></include>
		where id = #{id}
	</select>

	<!-- 查集合 - 根据条件（参数为空时代表忽略指定条件） [G] -->
	<select id="getList" resultMap="model">
		<include refid="select_list_sql"></include>
		<where>
			<if test=' this.has("id") '> and p.id = #{id} </if>
			<if test=' this.has("userId") '> and p.user_id = #{userId} </if>
			<if test=' this.has("categoryId") '> and p.category_id = #{categoryId} </if>
			<if test=' this.has("title") '> and p.title = #{title} </if>
			<if test=' this.has("account") '> and p.account = #{account} </if>
			<if test=' this.has("password") '> and p.password = #{password} </if>
			<if test=' this.has("url") '> and p.url = #{url} </if>
			<if test=' this.has("notes") '> and p.notes = #{notes} </if>
			<if test=' this.has("createBy") '> and p.create_by = #{createBy} </if>
			<if test=' this.has("createTime") '> and p.create_time = #{createTime} </if>
			<if test=' this.has("updateBy") '> and p.update_by = #{updateBy} </if>
			<if test=' this.has("updateTime") '> and p.update_time = #{updateTime} </if>
		</where>
		order by
		<choose>
			<when test='sortType == 1'> p.id desc </when>
			<when test='sortType == 2'> p.user_id desc </when>
			<when test='sortType == 3'> p.category_id desc </when>
			<when test='sortType == 4'> p.title desc </when>
			<when test='sortType == 5'> p.account desc </when>
			<when test='sortType == 6'> p.password desc </when>
			<when test='sortType == 7'> p.url desc </when>
			<when test='sortType == 8'> p.notes desc </when>
			<when test='sortType == 9'> p.create_by desc </when>
			<when test='sortType == 10'> p.create_time desc </when>
			<when test='sortType == 11'> p.update_by desc </when>
			<when test='sortType == 12'> p.update_time desc </when>
			<otherwise> id desc </otherwise>
		</choose>
	</select>










</mapper>